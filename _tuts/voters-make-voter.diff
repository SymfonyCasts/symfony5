diff --git a/src/Security/Voter/QuestionVoter.php b/src/Security/Voter/QuestionVoter.php
new file mode 100644
index 00000000..561aa62b
--- /dev/null
+++ b/src/Security/Voter/QuestionVoter.php
@@ -0,0 +1,41 @@
+<?php
+
+namespace App\Security\Voter;
+
+use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
+use Symfony\Component\Security\Core\Authorization\Voter\Voter;
+use Symfony\Component\Security\Core\User\UserInterface;
+
+class QuestionVoter extends Voter
+{
+    protected function supports(string $attribute, $subject): bool
+    {
+        // replace with your own logic
+        // https://symfony.com/doc/current/security/voters.html
+        return in_array($attribute, ['POST_EDIT', 'POST_VIEW'])
+            && $subject instanceof \App\Entity\Question;
+    }
+
+    protected function voteOnAttribute(string $attribute, $subject, TokenInterface $token): bool
+    {
+        $user = $token->getUser();
+        // if the user is anonymous, do not grant access
+        if (!$user instanceof UserInterface) {
+            return false;
+        }
+
+        // ... (check conditions and return true to grant permission) ...
+        switch ($attribute) {
+            case 'POST_EDIT':
+                // logic to determine if the user can EDIT
+                // return true or false
+                break;
+            case 'POST_VIEW':
+                // logic to determine if the user can VIEW
+                // return true or false
+                break;
+        }
+
+        return false;
+    }
+}
