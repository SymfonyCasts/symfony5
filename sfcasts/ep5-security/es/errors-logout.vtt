WEBVTT

00:00:01.016 --> 00:00:05.516 align:middle
Cuando falla el inicio de sesión, almacenamos
el AuthenticationException en la sesión

00:00:05.816 --> 00:00:09.866 align:middle
-que explica lo que ha ido mal- y luego
redirigimos a la página de inicio de sesión:

00:00:10.786 --> 00:00:12.956 align:middle
En esa página, leemos esa
excepción de la sesión

00:00:12.956 --> 00:00:18.026 align:middle
utilizando este bonito servicio
AuthenticationUtils: Y finalmente,

00:00:18.236 --> 00:00:22.816 align:middle
en la plantilla, llamamos al método
getMessageKey() para mostrar un mensaje seguro

00:00:22.906 --> 00:00:25.776 align:middle
que describa por qué ha
fallado la autenticación:

00:00:26.716 --> 00:00:32.586 align:middle
Por ejemplo, si introducimos un correo electrónico que no
existe, veremos No se pudo encontrar el nombre de usuario.

00:00:33.296 --> 00:00:37.876 align:middle
A nivel técnico, esto significa que no
se ha podido encontrar el objeto User.

00:00:38.626 --> 00:00:45.586 align:middle
Genial... pero para nosotros no es un gran mensaje porque
nos estamos registrando a través de un correo electrónico.

00:00:46.506 --> 00:00:50.716 align:middle
Además, si introducimos un usuario
válido - abraca_admin@example.com -

00:00:50.906 --> 00:00:56.316 align:middle
con una contraseña no válida, vemos
Credenciales no válidas. Es un mensaje mejor...

00:00:56.416 --> 00:00:58.056 align:middle
pero no es súper amigable.

00:00:58.916 --> 00:01:01.576 align:middle
Entonces, ¿cómo podemos personalizarlos?

00:01:02.206 --> 00:01:04.366 align:middle
La respuesta es sencilla y...

00:01:04.476 --> 00:01:06.016 align:middle
quizás un poco sorprendente.

00:01:06.476 --> 00:01:08.126 align:middle
Los traducimos.

00:01:08.816 --> 00:01:15.236 align:middle
Compruébalo: en la plantilla, después de
messageKey, añade |trans para traducirlo.

00:01:16.216 --> 00:01:17.726 align:middle
Pásale dos argumentos.

00:01:17.946 --> 00:01:20.626 align:middle
El primero es error.messageData.

00:01:21.236 --> 00:01:22.966 align:middle
Esto no es demasiado importante...

00:01:23.286 --> 00:01:26.876 align:middle
pero en el mundo de la traducción,
a veces tus traducciones pueden tener

00:01:26.876 --> 00:01:28.756 align:middle
valores "comodín "...

00:01:29.096 --> 00:01:32.026 align:middle
y aquí debes pasar los
valores de esos comodines.

00:01:32.846 --> 00:01:35.726 align:middle
El segundo argumento se llama
"dominio de traducción"...

00:01:35.846 --> 00:01:38.856 align:middle
que es casi como una categoría de traducción.

00:01:39.446 --> 00:01:40.686 align:middle
Pasa security:

00:01:41.516 --> 00:01:43.906 align:middle
Si tienes un sitio multilingüe,

00:01:44.236 --> 00:01:50.436 align:middle
todos los mensajes centrales de autentificación
ya han sido traducidos a otros idiomas...

00:01:51.086 --> 00:01:55.326 align:middle
y esas traducciones están disponibles
en un dominio llamado security.

00:01:55.966 --> 00:02:01.136 align:middle
Así que al utilizar el dominio security
aquí, si cambiamos el sitio al español,

00:02:01.476 --> 00:02:05.086 align:middle
obtendríamos instantáneamente
mensajes de autenticación en español.

00:02:05.976 --> 00:02:07.126 align:middle
Si dejáramos de hacerlo ahora...

00:02:07.426 --> 00:02:09.076 align:middle
¡no cambiaría absolutamente nada!

00:02:09.446 --> 00:02:13.766 align:middle
Pero como estamos pasando por el
traductor, tenemos la oportunidad

00:02:13.976 --> 00:02:17.526 align:middle
de "traducir" estas cadenas del inglés a...

00:02:17.776 --> 00:02:18.856 align:middle
¡un inglés diferente!

00:02:19.736 --> 00:02:23.426 align:middle
En el directorio translations/ -que
deberías tener automáticamente

00:02:23.476 --> 00:02:26.276 align:middle
porque el componente de
traducción ya está instalado-

00:02:26.876 --> 00:02:30.256 align:middle
crea un nuevo archivo llamado security.en.yaml:

00:02:30.646 --> 00:02:36.626 align:middle
security porque estamos utilizando el dominio
de traducción security y en para el inglés.

00:02:37.386 --> 00:02:43.286 align:middle
También puedes crear archivos de traducción .xlf - YAML
es simplemente más fácil para lo que necesitamos hacer.

00:02:44.086 --> 00:02:50.766 align:middle
Ahora, copia el mensaje de error exacto, incluyendo
el punto, pégalo -lo envolveré entre comillas

00:02:50.766 --> 00:02:56.156 align:middle
para estar seguro- y pon algo diferente
como ¡Contraseña no válida introducida!

00:02:57.036 --> 00:02:58.456 align:middle
¡Genial! Intentémoslo de nuevo.

00:02:59.286 --> 00:03:04.186 align:middle
Entra como abraca_admin@example.com
con una contraseña no válida y...

00:03:05.076 --> 00:03:06.226 align:middle
¡mucho mejor!

00:03:06.636 --> 00:03:08.806 align:middle
Probemos con un correo electrónico incorrecto.

00:03:10.806 --> 00:03:16.896 align:middle
Bien, repite el proceso: copia el mensaje,
ve al archivo de traducción, pega...

00:03:17.646 --> 00:03:22.026 align:middle
y cámbialo por algo un poco más fácil
de usar como ¡Email no encontrado!

00:03:23.246 --> 00:03:27.766 align:middle
Intentémoslo de nuevo: mismo correo
electrónico, cualquier contraseña y...

00:03:28.436 --> 00:03:30.726 align:middle
¡ya está! Correo electrónico no encontrado.

00:03:31.726 --> 00:03:34.046 align:middle
¡Muy bien! ¡Nuestro
autentificador está hecho!

00:03:34.476 --> 00:03:40.386 align:middle
Cargamos el User desde el correo electrónico, comprobamos
su contraseña y manejamos tanto el éxito como el fracaso.

00:03:40.746 --> 00:03:44.546 align:middle
¡Bueno! Vamos a añadir más
cosas a esto más adelante

00:03:44.746 --> 00:03:49.876 align:middle
-incluyendo la comprobación de contraseñas de
usuarios reales- pero esto es totalmente funcional.

00:03:50.876 --> 00:03:52.626 align:middle
Añadamos una forma de cerrar la sesión.

00:03:53.186 --> 00:03:57.106 align:middle
Así... como si el usuario va a /logout, se...

00:03:57.246 --> 00:03:57.806 align:middle
¡cerrar la sesión!

00:03:58.776 --> 00:04:03.126 align:middle
Esto empieza exactamente como esperas:
necesitamos una ruta y un controlador.

00:04:03.776 --> 00:04:11.256 align:middle
Dentro de SecurityController, copiaré el método
login(), lo pegaré, lo cambiaré a /logout,

00:04:12.176 --> 00:04:15.716 align:middle
app_logout y llamaré al método logout:

00:04:16.476 --> 00:04:19.326 align:middle
Para realizar el cierre de
sesión propiamente dicho...

00:04:19.816 --> 00:04:24.466 align:middle
no vamos a poner absolutamente
nada de código en este método.

00:04:25.076 --> 00:04:30.506 align:middle
En realidad, lanzaré un nuevo \Exception()
que diga "logout() nunca debe ser alcanzado":

00:04:32.036 --> 00:04:33.516 align:middle
Deja que me explique.

00:04:33.956 --> 00:04:37.266 align:middle
El cierre de sesión funciona un
poco como el inicio de sesión.

00:04:37.876 --> 00:04:40.456 align:middle
En lugar de poner algo de lógica
en el controlador, vamos a

00:04:40.736 --> 00:04:44.846 align:middle
activar algo en nuestro
cortafuegos que diga: ¡Oye!

00:04:45.276 --> 00:04:51.886 align:middle
Si el usuario va a /logout, intercepta esa
petición , cierra la sesión del usuario

00:04:52.096 --> 00:04:54.566 align:middle
y lo redirige a otro lugar.

00:04:55.466 --> 00:05:00.256 align:middle
Para activar esa magia, abre
config/packages/security.yaml.

00:05:00.876 --> 00:05:04.486 align:middle
En cualquier lugar de nuestro
cortafuegos, añade logout: true:

00:05:05.436 --> 00:05:11.486 align:middle
Internamente, esto activa un "oyente"
que busca cualquier petición a /logout.

00:05:12.086 --> 00:05:17.196 align:middle
Y en realidad, en lugar de decir simplemente logout:
true, puedes personalizar cómo funciona esto.

00:05:17.946 --> 00:05:23.556 align:middle
Busca tu terminal y ejecuta: symfony console
debug:config security Como recordatorio,

00:05:23.786 --> 00:05:29.086 align:middle
este comando te muestra toda tu
configuración actual bajo la clave security.

00:05:29.886 --> 00:05:34.056 align:middle
Es decir, toda nuestra configuración
más los valores por defecto.

00:05:34.706 --> 00:05:35.806 align:middle
Si ejecutamos esto...

00:05:37.326 --> 00:05:38.906 align:middle
y encontramos el cortafuegos main...

00:05:39.246 --> 00:05:40.916 align:middle
comprueba la sección logout.

00:05:41.646 --> 00:05:44.256 align:middle
Todas estas claves son los valores por defecto.

00:05:44.876 --> 00:05:47.756 align:middle
Observa que hay una llamada path: /logout.

00:05:48.376 --> 00:05:51.736 align:middle
Por eso está escuchando la URL /logout.

00:05:52.536 --> 00:05:57.036 align:middle
Si quisieras cerrar la sesión a través de otra
URL, sólo tendrías que modificar esta clave aquí.

00:05:57.886 --> 00:05:59.926 align:middle
Pero como aquí tenemos /logout...

00:06:00.176 --> 00:06:04.986 align:middle
y que coincide con nuestro /logout
de aquí, esto debería funcionar.

00:06:05.946 --> 00:06:11.526 align:middle
Por cierto, quizá te preguntes por qué
necesitamos crear una ruta y un controlador

00:06:11.936 --> 00:06:12.686 align:middle
¡Buena pregunta!

00:06:13.506 --> 00:06:17.366 align:middle
En realidad no necesitamos un
controlador, ya que nunca será llamado.

00:06:17.886 --> 00:06:19.766 align:middle
Pero sí necesitamos una ruta.

00:06:20.486 --> 00:06:27.206 align:middle
Si no tuviéramos una, el sistema de rutas provocaría
un error 404 antes de que el sistema de cierre de sesión

00:06:27.206 --> 00:06:28.496 align:middle
pudiera hacer su magia.

00:06:29.006 --> 00:06:33.066 align:middle
Además, es bueno tener una ruta,
para poder generar una URL hacia ella.

00:06:33.916 --> 00:06:35.726 align:middle
Bien: ¡probemos esto!

00:06:36.106 --> 00:06:40.736 align:middle
Primero inicia sesión:
abraca_admin@example.com y contraseña tada.

00:06:42.206 --> 00:06:44.396 align:middle
Genial: estamos autentificados.

00:06:45.206 --> 00:06:48.356 align:middle
Ve manualmente a /logout y...

00:06:48.876 --> 00:06:50.656 align:middle
¡estamos desconectados!

00:06:51.546 --> 00:06:56.786 align:middle
El comportamiento por defecto del sistema es cerrar
la sesión y redirigirnos a la página de inicio.

00:06:57.516 --> 00:07:00.986 align:middle
Si necesitas personalizarlo,
hay algunas opciones.

00:07:01.306 --> 00:07:06.886 align:middle
En primer lugar, en la clave logout, puedes cambiar
target por alguna otra URL o nombre de ruta.

00:07:07.716 --> 00:07:14.016 align:middle
Pero también podemos engancharnos al proceso de cierre de sesión
a través de un oyente de eventos, un tema del que hablaremos

00:07:14.016 --> 00:07:16.186 align:middle
hacia el final del tutorial.

00:07:17.136 --> 00:07:20.426 align:middle
Siguiente: vamos a dar a cada
usuario una contraseña real.

00:07:20.936 --> 00:07:25.336 align:middle
Esto implicará hacer un hash de las contraseñas, para
poder almacenarlas de forma segura en la base de datos,

00:07:25.536 --> 00:07:29.086 align:middle
y luego comprobar esas contraseñas
hash durante la autenticación.

00:07:29.816 --> 00:07:31.926 align:middle
Symfony facilita ambas cosas
